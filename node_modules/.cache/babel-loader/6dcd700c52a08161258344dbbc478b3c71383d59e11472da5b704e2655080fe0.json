{"ast":null,"code":"var _jsxFileName = \"/home/stas/todolisa/src/components/Task/Task.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // eslint-disable-next-line react/prop-types,react/destructuring-assignment\n      min: this.props.minValue,\n      // eslint-disable-next-line react/destructuring-assignment,react/prop-types\n      sec: this.props.secValue,\n      // eslint-disable-next-line react/no-unused-state\n      isCounting: false\n    };\n    this.minDecrement = () => {\n      const {\n        min\n      } = this.state;\n      this.setState({\n        min: min - 1,\n        sec: 59\n      });\n    };\n    this.secDecrement = () => {\n      const {\n        min,\n        sec,\n        isCounting\n      } = this.state;\n      const {\n        onCheckBoxClick\n      } = this.props;\n      if (min === 0 && sec === 0 && isCounting === true) {\n        onCheckBoxClick();\n        clearInterval(this.counterID);\n        this.setState({\n          isCounting: false\n        });\n      }\n      if (sec > 0) {\n        this.setState({\n          sec: sec - 1,\n          isCounting: true\n        });\n      } else {\n        this.minDecrement();\n      }\n    };\n    this.handlePause = event => {\n      event.stopPropagation();\n      this.setState({\n        isCounting: false\n      });\n      clearInterval(this.counterID);\n    };\n    this.handleStart = event => {\n      event.stopPropagation();\n      this.setState({\n        isCounting: true\n      });\n      this.counterID = setInterval(() => {\n        this.secDecrement();\n      }, 1000);\n    };\n  }\n  componentWillUnmount() {\n    clearInterval(this.counterID);\n  }\n  render() {\n    const {\n      onCheckBoxClick,\n      description,\n      timeAfterCreate,\n      onEditClick,\n      onDeletedClick,\n      checked\n    } = this.props;\n    const {\n      min,\n      sec,\n      isCounting\n    } = this.state;\n    const buttonTimer = !isCounting ?\n    /*#__PURE__*/\n    /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"icon icon-play\",\n      onClick: this.handleStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this) :\n    /*#__PURE__*/\n    /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"icon icon-pause\",\n      onClick: this.handlePause\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        readOnly: true,\n        onClick: onCheckBoxClick,\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"presentation\",\n          className: \"title\",\n          onClick: onCheckBoxClick,\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: [buttonTimer, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description__time-value\",\n            children: [min, \":\", sec]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"created\",\n          children: [\"created \", timeAfterCreate, \" ago\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"icon icon-edit\",\n        onClick: onEditClick,\n        \"aria-label\": \"log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"icon icon-destroy\",\n        onClick: onDeletedClick,\n        \"aria-label\": \"log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n}\nTask.defaultProps = {\n  description: 'Имя не задано',\n  checked: false,\n  timeAfterCreate: () => {},\n  onEditClick: () => {},\n  onDeletedClick: () => {},\n  onCheckBoxClick: () => {}\n};\nTask.propTypes = {\n  checked: PropTypes.bool,\n  onCheckBoxClick: PropTypes.func,\n  description: PropTypes.string,\n  timeAfterCreate: PropTypes.string,\n  onEditClick: PropTypes.func,\n  onDeletedClick: PropTypes.func\n};","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","Task","constructor","args","state","min","props","minValue","sec","secValue","isCounting","minDecrement","setState","secDecrement","onCheckBoxClick","clearInterval","counterID","handlePause","event","stopPropagation","handleStart","setInterval","componentWillUnmount","render","description","timeAfterCreate","onEditClick","onDeletedClick","checked","buttonTimer","type","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","readOnly","role","defaultProps","propTypes","bool","func","string"],"sources":["/home/stas/todolisa/src/components/Task/Task.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Task.css';\n\nexport default class Task extends Component {\n  state = {\n    // eslint-disable-next-line react/prop-types,react/destructuring-assignment\n    min: this.props.minValue,\n    // eslint-disable-next-line react/destructuring-assignment,react/prop-types\n    sec: this.props.secValue,\n    // eslint-disable-next-line react/no-unused-state\n    isCounting: false,\n  };\n\n  static defaultProps = {\n    description: 'Имя не задано',\n    checked: false,\n    timeAfterCreate: () => {},\n    onEditClick: () => {},\n    onDeletedClick: () => {},\n    onCheckBoxClick: () => {},\n  };\n\n  static propTypes = {\n    checked: PropTypes.bool,\n    onCheckBoxClick: PropTypes.func,\n    description: PropTypes.string,\n    timeAfterCreate: PropTypes.string,\n    onEditClick: PropTypes.func,\n    onDeletedClick: PropTypes.func,\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.counterID);\n  }\n\n  minDecrement = () => {\n    const { min } = this.state;\n    this.setState({\n      min: min - 1,\n      sec: 59,\n    });\n  };\n\n  secDecrement = () => {\n    const { min, sec, isCounting } = this.state;\n    const { onCheckBoxClick } = this.props;\n\n    if (min === 0 && sec === 0 && isCounting === true) {\n      onCheckBoxClick();\n      clearInterval(this.counterID);\n      this.setState({\n        isCounting: false,\n      });\n    }\n    if (sec > 0) {\n      this.setState({\n        sec: sec - 1,\n        isCounting: true,\n      });\n    } else {\n      this.minDecrement();\n    }\n  };\n\n  handlePause = (event) => {\n    event.stopPropagation();\n    this.setState({ isCounting: false });\n    clearInterval(this.counterID);\n  };\n\n  handleStart = (event) => {\n    event.stopPropagation();\n    this.setState({ isCounting: true });\n    this.counterID = setInterval(() => {\n      this.secDecrement();\n    }, 1000);\n  };\n\n  render() {\n    const { onCheckBoxClick, description, timeAfterCreate, onEditClick, onDeletedClick, checked } = this.props;\n    const { min, sec, isCounting } = this.state;\n    const buttonTimer = !isCounting ? (\n      /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n      <button type=\"button\" className=\"icon icon-play\" onClick={this.handleStart} />\n    ) : (\n      /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n      <button type=\"button\" className=\"icon icon-pause\" onClick={this.handlePause} />\n    );\n    return (\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" readOnly onClick={onCheckBoxClick} checked={checked} />\n\n        <div className=\"label\">\n          <span role=\"presentation\" className=\"title\" onClick={onCheckBoxClick}>\n            {description}\n          </span>\n          <span className=\"description\">\n            {buttonTimer}\n            <span className=\"description__time-value\">\n              {min}:{sec}\n            </span>\n          </span>\n          <span className=\"created\">created {timeAfterCreate} ago</span>\n        </div>\n        <button type=\"button\" className=\"icon icon-edit\" onClick={onEditClick} aria-label=\"log out\" />\n        <button type=\"button\" className=\"icon icon-destroy\" onClick={onDeletedClick} aria-label=\"log out\" />\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}