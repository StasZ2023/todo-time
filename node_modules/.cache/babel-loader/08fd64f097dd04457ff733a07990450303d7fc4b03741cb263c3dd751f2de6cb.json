{"ast":null,"code":"var _jsxFileName = \"/home/stas/todolisa/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NewTaskForm from '../NewTaskForm';\nimport Footer from '../Footer';\nimport TaskList from '../TaskList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataStream: [this.createTodoTask('Completed task', new Date(2024, 10, 6, 11, 30)), this.createTodoTask('Editing task', new Date(2024, 10, 6, 11, 30)), this.createTodoTask('Active task', new Date(2024, 10, 6, 11, 30))],\n      filterData: 'all'\n    };\n    this.addItem = (description, minValue, secValue) => {\n      const newItem = this.createTodoTask(description, minValue, secValue);\n      this.setState(({\n        dataStream\n      }) => {\n        const newDataStream = [...dataStream, newItem];\n        return {\n          dataStream: newDataStream\n        };\n      });\n    };\n    this.changeDescription = (id, description) => {\n      this.setState(({\n        dataStream\n      }) => {\n        const newDataStream = dataStream.map(el => {\n          if (el.id === id) {\n            return {\n              ...el,\n              description,\n              compleeted: false,\n              editing: false\n            };\n          }\n          return el;\n        });\n        return {\n          dataStream: newDataStream\n        };\n      });\n    };\n    this.editingItem = id => {\n      this.setState(({\n        dataStream\n      }) => {\n        const newDataStream = dataStream.map(el => {\n          if (el.id === id) {\n            return {\n              ...el,\n              editing: true\n            };\n          }\n          return el;\n        });\n        return {\n          dataStream: newDataStream\n        };\n      });\n    };\n    this.completedItem = id => {\n      this.setState(({\n        dataStream\n      }) => {\n        const newDataStream = dataStream.map(el => {\n          if (el.id === id) {\n            return {\n              ...el,\n              compleeted: !el.compleeted\n            };\n          }\n          return el;\n        });\n        return {\n          dataStream: newDataStream\n        };\n      });\n    };\n    this.deletedItem = id => {\n      this.setState(({\n        dataStream\n      }) => {\n        const newDataStream = dataStream.filter(el => el.id !== id);\n        return {\n          dataStream: newDataStream\n        };\n      });\n    };\n    this.clearCompleted = () => {\n      this.setState(({\n        dataStream\n      }) => {\n        const newDataStream = dataStream.filter(el => el.compleeted === false);\n        return {\n          dataStream: newDataStream\n        };\n      });\n    };\n    this.setFilterData = event => {\n      this.setState({\n        filterData: event.target.innerText.toLowerCase()\n      });\n    };\n  }\n  createTodoTask(description, minValue, secValue) {\n    const id = Date.now() + Math.floor(Math.random() * 10000);\n    const trimDescription = description.replace(/ +/g, ' ').trim();\n    // todo добавить проверку на число\n    let minValueNumber = +minValue;\n    let secValueNumber = +secValue;\n    if (secValueNumber > 60) {\n      minValueNumber += Math.trunc(secValueNumber / 60);\n      secValueNumber -= Math.trunc(secValueNumber / 60) * 60;\n    }\n    return {\n      id,\n      description: trimDescription,\n      dateCreate: new Date(),\n      compleeted: false,\n      editing: false,\n      minValue: minValueNumber,\n      secValue: secValueNumber\n    };\n  }\n  render() {\n    const {\n      dataStream,\n      filterData\n    } = this.state;\n    const notCompletedCount = dataStream.filter(el => !el.compleeted).length;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n          addNewItem: this.addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          taskData: dataStream,\n          onCheckBoxClick: this.completedItem,\n          onDeletedClick: this.deletedItem,\n          onEditClick: this.editingItem,\n          onChangeDescription: this.changeDescription,\n          filterData: filterData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          notCompleetedCount: notCompletedCount,\n          clearCompleted: this.clearCompleted,\n          setFilterData: this.setFilterData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n}\nApp.defaultProps = {\n  dataStream: [{\n    id: 101,\n    description: 'Синхронизировать список задач с сервером',\n    dateCreate: new Date(),\n    compleeted: false,\n    editing: false,\n    minValue: 15,\n    secValue: 30\n  }],\n  filterData: 'all'\n};\nApp.propTypes = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  dataStream: PropTypes.instanceOf(Array),\n  // eslint-disable-next-line react/no-unused-prop-types\n  filterData: PropTypes.string\n};","map":{"version":3,"names":["React","Component","PropTypes","NewTaskForm","Footer","TaskList","jsxDEV","_jsxDEV","App","constructor","args","state","dataStream","createTodoTask","Date","filterData","addItem","description","minValue","secValue","newItem","setState","newDataStream","changeDescription","id","map","el","compleeted","editing","editingItem","completedItem","deletedItem","filter","clearCompleted","setFilterData","event","target","innerText","toLowerCase","now","Math","floor","random","trimDescription","replace","trim","minValueNumber","secValueNumber","trunc","dateCreate","render","notCompletedCount","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addNewItem","taskData","onCheckBoxClick","onDeletedClick","onEditClick","onChangeDescription","notCompleetedCount","defaultProps","propTypes","instanceOf","Array","string"],"sources":["/home/stas/todolisa/src/components/App/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NewTaskForm from '../NewTaskForm';\nimport Footer from '../Footer';\nimport TaskList from '../TaskList';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    dataStream: [\n      this.createTodoTask('Completed task',   new Date(2024, 10, 6,11,30)),\n      this.createTodoTask('Editing task', new Date(2024, 10, 6,11,30)),\n      this.createTodoTask('Active task', new Date(2024, 10, 6,11,30)),\n    ],\n    filterData: 'all',\n  };\n\n  static defaultProps = {\n    dataStream: [\n      {\n        id: 101,\n        description: 'Синхронизировать список задач с сервером',\n        dateCreate: new Date(),\n        compleeted: false,\n        editing: false,\n        minValue: 15,\n        secValue: 30,\n      },\n    ],\n    filterData: 'all',\n  };\n\n  static propTypes = {\n    // eslint-disable-next-line react/no-unused-prop-types\n    dataStream: PropTypes.instanceOf(Array),\n    // eslint-disable-next-line react/no-unused-prop-types\n    filterData: PropTypes.string,\n  };\n\n  addItem = (description, minValue, secValue) => {\n    const newItem = this.createTodoTask(description, minValue, secValue);\n    this.setState(({ dataStream }) => {\n      const newDataStream = [...dataStream, newItem];\n      return {\n        dataStream: newDataStream,\n      };\n    });\n  };\n\n  changeDescription = (id, description) => {\n    this.setState(({ dataStream }) => {\n      const newDataStream = dataStream.map((el) => {\n        if (el.id === id) {\n          return {\n            ...el,\n            description,\n            compleeted: false,\n            editing: false,\n          };\n        }\n        return el;\n      });\n      return {\n        dataStream: newDataStream,\n      };\n    });\n  };\n\n  editingItem = (id) => {\n    this.setState(({ dataStream }) => {\n      const newDataStream = dataStream.map((el) => {\n        if (el.id === id) {\n          return {\n            ...el,\n            editing: true,\n          };\n        }\n        return el;\n      });\n      return {\n        dataStream: newDataStream,\n      };\n    });\n  };\n\n  completedItem = (id) => {\n    this.setState(({ dataStream }) => {\n      const newDataStream = dataStream.map((el) => {\n        if (el.id === id) {\n          return {\n            ...el,\n            compleeted: !el.compleeted,\n          };\n        }\n        return el;\n      });\n      return {\n        dataStream: newDataStream,\n      };\n    });\n  };\n\n  deletedItem = (id) => {\n    this.setState(({ dataStream }) => {\n      const newDataStream = dataStream.filter((el) => el.id !== id);\n      return {\n        dataStream: newDataStream,\n      };\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ dataStream }) => {\n      const newDataStream = dataStream.filter((el) => el.compleeted === false);\n      return {\n        dataStream: newDataStream,\n      };\n    });\n  };\n\n  setFilterData = (event) => {\n    this.setState({\n      filterData: event.target.innerText.toLowerCase(),\n    });\n  };\n\n  createTodoTask(description, minValue, secValue) {\n    const id = Date.now() + Math.floor(Math.random() * 10000);\n    const trimDescription = description.replace(/ +/g, ' ').trim();\n    // todo добавить проверку на число\n    let minValueNumber = +minValue;\n    let secValueNumber = +secValue;\n    if (secValueNumber >60 ){\n      minValueNumber +=Math.trunc(secValueNumber/60)\n      secValueNumber -= Math.trunc(secValueNumber/60)*60\n            }\n    return {\n      id,\n      description: trimDescription,\n      dateCreate: new Date(),\n      compleeted: false,\n      editing: false,\n      minValue: minValueNumber,\n      secValue: secValueNumber,\n    };\n  }\n\n  render() {\n    const { dataStream, filterData } = this.state;\n    const notCompletedCount = dataStream.filter((el) => !el.compleeted).length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTaskForm addNewItem={this.addItem} />\n        </header>\n        <section className=\"main\">\n          <TaskList\n            taskData={dataStream}\n            onCheckBoxClick={this.completedItem}\n            onDeletedClick={this.deletedItem}\n            onEditClick={this.editingItem}\n            onChangeDescription={this.changeDescription}\n            filterData={filterData}\n          />\n\n          <Footer\n            notCompleetedCount={notCompletedCount}\n            clearCompleted={this.clearCompleted}\n            setFilterData={this.setFilterData}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}