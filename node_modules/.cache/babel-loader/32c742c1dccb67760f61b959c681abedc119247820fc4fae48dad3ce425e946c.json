{"ast":null,"code":"var _jsxFileName = \"/home/stas/todolisa/src/components/TaskFilter/TaskFilter.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskFilter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskFilter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allButtonClicked: true,\n      activeButtonClicked: false,\n      completedButtonClicked: false\n    };\n    this.onClickButton = event => {\n      const buttonClicked = event.target.innerText.toLowerCase();\n      if (buttonClicked === 'all') {\n        this.setState({\n          allButtonClicked: true,\n          activeButtonClicked: false,\n          completedButtonClicked: false\n        });\n      } else if (buttonClicked === 'active') {\n        this.setState({\n          allButtonClicked: false,\n          activeButtonClicked: true,\n          completedButtonClicked: false\n        });\n      } else {\n        this.setState({\n          allButtonClicked: false,\n          activeButtonClicked: false,\n          completedButtonClicked: true\n        });\n      }\n    };\n  }\n  render() {\n    const {\n      setFilterData\n    } = this.props;\n    const {\n      allButtonClicked\n    } = this.state;\n    const {\n      activeButtonClicked\n    } = this.state;\n    const {\n      completedButtonClicked\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: allButtonClicked ? 'selected' : '',\n          onClick: event => {\n            setFilterData(event);\n            this.onClickButton(event);\n          },\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: activeButtonClicked ? 'selected' : '',\n          onClick: event => {\n            setFilterData(event);\n            this.onClickButton(event);\n          },\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: completedButtonClicked ? 'selected' : '',\n          onClick: event => {\n            setFilterData(event);\n            this.onClickButton(event);\n          },\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nTaskFilter.defaultProps = {\n  setFilterData: () => {}\n};\nTaskFilter.propTypes = {\n  setFilterData: PropTypes.func\n};","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","TaskFilter","constructor","args","state","allButtonClicked","activeButtonClicked","completedButtonClicked","onClickButton","event","buttonClicked","target","innerText","toLowerCase","setState","render","setFilterData","props","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","propTypes","func"],"sources":["/home/stas/todolisa/src/components/TaskFilter/TaskFilter.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskFilter.css';\n\nexport default class TaskFilter extends Component {\n  state = {\n    allButtonClicked: true,\n    activeButtonClicked: false,\n    completedButtonClicked: false,\n  };\n\n  static defaultProps = {\n    setFilterData: () => {},\n  };\n\n  static propTypes = {\n    setFilterData: PropTypes.func,\n  };\n\n  onClickButton = (event) => {\n    const buttonClicked = event.target.innerText.toLowerCase();\n    if (buttonClicked === 'all') {\n      this.setState({\n        allButtonClicked: true,\n        activeButtonClicked: false,\n        completedButtonClicked: false,\n      });\n    } else if (buttonClicked === 'active') {\n      this.setState({\n        allButtonClicked: false,\n        activeButtonClicked: true,\n        completedButtonClicked: false,\n      });\n    } else {\n      this.setState({\n        allButtonClicked: false,\n        activeButtonClicked: false,\n        completedButtonClicked: true,\n      });\n    }\n  };\n\n  render() {\n    const { setFilterData } = this.props;\n    const { allButtonClicked } = this.state;\n    const { activeButtonClicked } = this.state;\n    const { completedButtonClicked } = this.state;\n    return (\n      <ul className=\"filters\">\n        <li>\n          <button\n            type=\"button\"\n            className={allButtonClicked ? 'selected' : ''}\n            onClick={(event) => {\n              setFilterData(event);\n              this.onClickButton(event);\n            }}\n          >\n            All\n          </button>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            className={activeButtonClicked ? 'selected' : ''}\n            onClick={(event) => {\n              setFilterData(event);\n              this.onClickButton(event);\n            }}\n          >\n            Active\n          </button>\n        </li>\n        <li>\n          <button\n            type=\"button\"\n            className={completedButtonClicked ? 'selected' : ''}\n            onClick={(event) => {\n              setFilterData(event);\n              this.onClickButton(event);\n            }}\n          >\n            Completed\n          </button>\n        </li>\n      </ul>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}